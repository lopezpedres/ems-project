"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const getPageFiles_1 = require("../../shared/getPageFiles");
const assert_1 = require("../../shared/utils/assert");
const ssrEnv_1 = require("../ssrEnv");
const utils_1 = require("../../shared/utils");
const moduleExists_1 = require("../../shared/utils/moduleExists");
const loadViteEntry_1 = require("./loadViteEntry");
(0, getPageFiles_1.setPageFilesAsync)(setPageFiles);
async function setPageFiles() {
    const ssrEnv = (0, ssrEnv_1.getSsrEnv)();
    const viteEntryFile = 'pageFiles.js';
    (0, assert_1.assert)((0, moduleExists_1.moduleExists)(`./${viteEntryFile}`, __dirname));
    const userDist = `${ssrEnv.root}/dist`;
    // Current directory: vite-plugin-ssr/dist/cjs/node/page-files/
    const pluginDist = `../../../../dist`;
    const prodPath = `${userDist}/server/${viteEntryFile}`;
    const devPath = `${pluginDist}/esm/node/page-files/${viteEntryFile}`;
    const errorMessage = 'Make sure to run `vite build && vite build --ssr` before running your Node.js server with `createPageRenderer({ isProduction: true })`';
    const moduleExports = await (0, loadViteEntry_1.loadViteEntry)({
        devPath,
        prodPath,
        errorMessage,
        viteDevServer: ssrEnv.viteDevServer,
        isProduction: ssrEnv.isProduction
    });
    const pageFiles = moduleExports.pageFiles || moduleExports.default.pageFiles;
    (0, assert_1.assert)(pageFiles);
    (0, assert_1.assert)((0, utils_1.hasProp)(pageFiles, '.page'));
    return pageFiles;
}
//# sourceMappingURL=setup.js.map